github:
  token: "${GITHUB_TOKEN}"
  api_base_url: "https://api.github.com"
  
llm:
  # Default provider (openai or bedrock)
  default_provider: "openai"
  
  # OpenAI Configuration
  openai:
    api_key: "${OPENAPI_KEY}"
    model: "gpt-4o-mini"  # Cost-effective and capable
    max_tokens: 1000
    temperature: 0.1
    
  # AWS Bedrock Configuration  
  bedrock:
    region: "us-east-1"
    model: "anthropic.claude-3-5-sonnet-20240620-v1:0"
    max_tokens: 1000
    temperature: 0.1
    aws_profile: "bedrock-dev"

# Output directory configuration
output:
  # Default directory for analysis results
  default_dir: "analysis-results"  # Dedicated folder for all analyses
  
  # Directory for test data and examples
  test_data_dir: "tests/data"
  
  # Default filenames
  manifest: "manifest.json"
  token_analysis: "token_analysis.json"

analysis:
  file_extensions: [".py", ".js", ".java", ".go", ".rb", ".php", ".ts", ".jsx", ".tsx", ".c", ".cpp", ".h", ".cs", ".sql", ".yaml", ".yml", ".json", ".xml", ".html", ".css"]
  max_file_size: 1048576  # 1MB
  batch_size: 10
  
risk_scoring:
  weights:
    vulnerability: 0.4
    purpose: 0.3
    exposure: 0.2
    complexity: 0.1

# Phase 3: Vulnerability Scanning Configuration
vulnerability_scanning:
  # Semgrep Configuration
  semgrep:
    enabled: true
    timeout: 120  # seconds
    exclude_patterns: 
      - "tests/"
      - "*.min.js"
      - "node_modules/"
      - "__pycache__/"
      - ".git/"
    
  # Bandit Configuration (Python security)
  bandit:
    enabled: true
    confidence_level: "low"    # low, medium, high
    severity_level: "low"      # low, medium, high  
    exclude_tests: true
    
  # General settings
  output_format: "json"
  max_findings_per_file: 100
  
  # Tool installation
  auto_install: true
